// <auto-generated />
using System;
using CarsIsland.Catalog.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarsIsland.Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(CarCatalogDbContext))]
    partial class CarCatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarsIsland.Catalog.Domain.Model.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AvailableForRent")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44bdfdb4-604d-4ef3-b923-75bd240c630f"),
                            AvailableForRent = true,
                            Brand = "BMW",
                            Model = "320",
                            PricePerDay = 200m
                        },
                        new
                        {
                            Id = new Guid("fd6b2ec5-4751-49c1-a006-73d63cd6310a"),
                            AvailableForRent = true,
                            Brand = "Audi",
                            Model = "A1",
                            PricePerDay = 120m
                        },
                        new
                        {
                            Id = new Guid("21655889-d6bf-4d4a-86c9-faebc42da1a3"),
                            AvailableForRent = true,
                            Brand = "Mercedes",
                            Model = "E200",
                            PricePerDay = 250m
                        },
                        new
                        {
                            Id = new Guid("e5d54404-ea0f-47bc-8ed9-795ac9eb1114"),
                            AvailableForRent = true,
                            Brand = "Ford",
                            Model = "Focus",
                            PricePerDay = 90m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
